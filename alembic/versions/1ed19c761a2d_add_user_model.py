"""add user model

Revision ID: 1ed19c761a2d
Revises:
Create Date: 2025-08-06 16:20:39.420965

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "1ed19c761a2d"
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
	"""Upgrade schema."""
	# ### commands auto generated by Alembic - please adjust! ###
	op.create_table(
		"task_list",
		sa.Column("id", sa.UUID(), nullable=False),
		sa.Column("name", sa.VARCHAR(length=255), nullable=False),
		sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
		sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), nullable=True),
		sa.PrimaryKeyConstraint("id"),
		sa.UniqueConstraint("name"),
	)
	op.create_index(
		op.f("ix_task_list_created_at"), "task_list", ["created_at"], unique=False
	)
	op.create_table(
		"users",
		sa.Column("id", sa.UUID(), nullable=False),
		sa.Column("full_name", sa.VARCHAR(length=255), nullable=False),
		sa.Column("email", sa.VARCHAR(length=255), nullable=False),
		sa.Column("password_hash", sa.VARCHAR(length=255), nullable=False),
		sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
		sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), nullable=True),
		sa.PrimaryKeyConstraint("id"),
	)
	op.create_index(op.f("ix_users_created_at"), "users", ["created_at"], unique=False)
	op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
	op.create_table(
		"tasks",
		sa.Column("id", sa.UUID(), nullable=False),
		sa.Column(
			"status",
			sa.Enum("NEW", "ACTIVE", "COMPLETED", "BLOCKED", "ERROR", name="status"),
			nullable=False,
		),
		sa.Column(
			"priority",
			sa.Enum("CRITICAL", "HIGH", "MEDIUM", "LOW", "OPTIONAL", name="priority"),
			nullable=False,
		),
		sa.Column("user", sa.UUID(), nullable=True),
		sa.Column("created_at", postgresql.TIMESTAMP(timezone=True), nullable=False),
		sa.Column("updated_at", postgresql.TIMESTAMP(timezone=True), nullable=True),
		sa.Column("task_list_id", sa.UUID(), nullable=False),
		sa.ForeignKeyConstraint(
			["task_list_id"],
			["task_list.id"],
		),
		sa.PrimaryKeyConstraint("id"),
	)
	op.create_index(op.f("ix_tasks_created_at"), "tasks", ["created_at"], unique=False)
	op.create_index(op.f("ix_tasks_status"), "tasks", ["status"], unique=False)
	# ### end Alembic commands ###


def downgrade() -> None:
	"""Downgrade schema."""
	# ### commands auto generated by Alembic - please adjust! ###
	op.drop_index(op.f("ix_tasks_status"), table_name="tasks")
	op.drop_index(op.f("ix_tasks_created_at"), table_name="tasks")
	op.drop_table("tasks")
	op.drop_index(op.f("ix_users_email"), table_name="users")
	op.drop_index(op.f("ix_users_created_at"), table_name="users")
	op.drop_table("users")
	op.drop_index(op.f("ix_task_list_created_at"), table_name="task_list")
	op.drop_table("task_list")
	# ### end Alembic commands ###
